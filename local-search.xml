<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>随手搓 01：MC 物品数据统计</title>
    <link href="/07-simplecode01/"/>
    <url>/07-simplecode01/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>序</h1><p>最近看到一个比较老旧的 GitHub repo：<a href="https://github.com/SciCraft/mc-scanner">SciCrafft/mc-scanner</a></p><p>于是就顺手拿到自己的服务器上试试看，欸，效果不错，但是数据统计似乎不是那么完全</p><p>潜影盒里的物品几乎没有统计到，出来的也不是我想要的数据</p><p>怎么办呢，原理上看起来挺简单的，无非就是暴力搜索，那就自己写一个吧 （。＾▽＾）</p><p>注意一点就是，这篇并不是一个教程，而是我编程时的心路历程，所以会发现排版似乎有点混乱</p><p>(●’◡’●)</p><h1>基本概念</h1><p>稍微了解 Minecraft 的存档逻辑的话，写起来也是非常轻松的</p><p>下面是一个最基本的 Minecraft 存档结构</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs markdown">.<br>└── world/<br><span class="hljs-code">    ├── playerdata/</span><br><span class="hljs-code">    │   └── .dat</span><br><span class="hljs-code">    ├── region/</span><br><span class="hljs-code">    │   └── .mca</span><br><span class="hljs-code">    ├── DIM1/</span><br><span class="hljs-code">    │   └── region/</span><br><span class="hljs-code">    │       └── .mca</span><br><span class="hljs-code">    ├── DIM-1/</span><br><span class="hljs-code">    │   └── region/</span><br><span class="hljs-code">    │       └── .mca</span><br><span class="hljs-code">    └── ...</span><br></code></pre></td></tr></table></figure><p>这次物品统计所要读取的只有位于 <code>\playerdata</code> 的 <code>.dat</code> 玩家文件以及位于 <code>\region</code> 的 <code>.mca</code> 区域文件</p><p>其中 <code>.dat</code> 文件包含了所有有关玩家的资料，这里就不多叙说，想了解更多的话可以查看 <a href="https://minecraft.wiki/w/Player.dat_format">Wiki</a></p><p>而 <code>.mca</code> 文件就包含了所有在这个维度的区块信息，想了解更多也可以查看 <a href="https://minecraft.wiki/w/Region_file_format">Wiki</a></p><p>这次将会使用 <a href="https://pypi.org/project/nbtlib/">nbtlib</a> 来处理 <code>.dat</code> 玩家资料</p><p>以及魔改的 <a href="https://github.com/0xTiger/anvil-parser">anvilparser</a> 来处理 <code>.mca</code> 区块文件，至于为什么要用魔改的，我稍后会解释 😉</p><h1>关于数据</h1><h2 id="playerdata">playerdata</h2><p>随便用一个 nbt 编辑器打开位于 <code>\playerdata</code> 的玩家文件</p><blockquote><p>这里我推荐使用 <a href="https://github.com/tryashtar/nbt-studio">NBT Studio</a></p></blockquote><p>文件名是一串玩家 UUID</p><blockquote><p>如果是启用了 <code>online mode</code> 的服务器将会是官方的 UUID，可以通过<a href="https://minecraftuuid.com/">这个网站</a>找到</p></blockquote><p>打开文件后，可以看到以玩家 UUID 为名的根标签，以及其下的另一堆标签</p><p>而我们需要的玩家物品栏数据存放于名为 <code>Inventory</code> 的标签之下</p><p>玩家末影箱的物品栏数据则存放于名为 <code>EnderItems</code> 的标签之下</p><p>所需的数据结构如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">UUID<br>├── Inventory<br>│   └── ...<br>├── EnderItems<br>│   └── ...<br>└── ...<br></code></pre></td></tr></table></figure><h2 id="物品数据">物品数据</h2><p>物品数据在 NBT 里算是一个<em>复合标签类型</em> （Compound）</p><blockquote><p>复合标签类型，为一个包含属性值对的有序列表。其中的每个标签可以为任意类型。</p></blockquote><p>其中分别为：</p><ul class="lvl-0"><li class="lvl-2"><p><code>Slot</code>：身处的物品格编号</p></li><li class="lvl-2"><p><code>id</code>：Minecraft 物品 id，这也是我们需要统计的</p></li><li class="lvl-2"><p><code>tag</code>：物品标签，这个后面会再提到，另外不一定每一个物品都会有</p></li><li class="lvl-2"><p><code>Count</code>：物品数量</p></li></ul><h2 id="获取玩家数据">获取玩家数据</h2><p><a href="https://github.com/vberlier/nbtlib">nbtlib repo</a></p><p>先过一遍文档，<a href="https://github.com/vberlier/nbtlib#basic-usage">基本运用</a>的第一项就是<a href="https://github.com/vberlier/nbtlib#reading-files">读取文件</a></p><p>那就照着写来试试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> nbtlib<br><br>target_data = nbtlib.load(<span class="hljs-string">&quot;[UUID].dat&quot;</span>)<br></code></pre></td></tr></table></figure><p>读取完之后试着打印一下其内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(target_data)<br></code></pre></td></tr></table></figure><p>似乎有全部信息，但是该如何获取信息呢？</p><p>试试用一下 <code>for</code> 循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_data:<br><span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs commandline">seenCredits<br>DeathTime<br>foodTickTimer<br>recipeBook<br>XpTotal<br>...<br></code></pre></td></tr></table></figure><p>返回项目里面有着全部标签名，不错</p><p>那能否使用类似字典那样获取 item 呢？</p><p>这个库看起来挺简单的，那就来翻翻源码吧</p><p>首先找到 <code>nbt.py</code></p><blockquote><p>一开始不是用了 <code>nbtlib.load()</code> 这个 function吗，那就试着从这里着手</p></blockquote><p>找到 <code>def load()</code> 了，这个 function 是在 class <code>File</code> 里面</p><p>局部代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">File</span>(<span class="hljs-title class_ inherited__">Compound</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">...</span>):<br>...<br>...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load</span>(<span class="hljs-params">...</span>):<br>...<br></code></pre></td></tr></table></figure><p>可见，<code>File</code> class 是从 <code>Compound</code> class 遗传下来，那就再往上找吧</p><p>代码文件有些乱，但是上面有一句 <code>import</code> 差点被忽略掉了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> .tag <span class="hljs-keyword">import</span> BYTE, Compound, ...<br></code></pre></td></tr></table></figure><p>那就试着从同级文件的 <code>tag.py</code> 里找找吧</p><p>class <code>Compund</code> 代码片段如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Compound</span>(...):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__contains__</span>(<span class="hljs-params">self, item</span>):<br>...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, key</span>):<br>...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__setitem__</span>(<span class="hljs-params">self, key</span>):<br>...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__delitem__</span>(<span class="hljs-params">self, key</span>):<br>...<br>...<br></code></pre></td></tr></table></figure><p>看得到，几乎全部符合 python <code>indexer []</code> 格式的使用都有合适的 implementation，那就可以放心用了</p><p>注意一个小细节，一开始不是用了一次 <code>for</code> 循环嘛，循环语句的 <code>in</code> 也能在这里的 <code>__contains__</code> 看到是有合适的 implementation !(*￣(￣　*)</p><p>那就来写些统计代码吧</p><p>首先来实现一些简单的计数功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">item_record: <span class="hljs-built_in">dict</span> = &#123;&#125; <span class="hljs-comment"># initalize 物品记录</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">count_item</span>(<span class="hljs-params">item_id, item_count: <span class="hljs-built_in">int</span></span>):<br>item_id: <span class="hljs-built_in">str</span> = <span class="hljs-built_in">str</span>(item_id)<br><span class="hljs-keyword">if</span> item_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> item_record:<br>item_record[item_id] = <span class="hljs-number">0</span><br>item_record[item_id] += item_count<br></code></pre></td></tr></table></figure><p>再来写个玩家物品栏的暴力搜索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">player_inventory_search</span>(<span class="hljs-params">data_file</span>):<br>    target_file = nbtlib.load(data_file)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;Inventory&quot;</span>]:<br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-built_in">print</span>(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;EnderItems&quot;</span>]:<br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-built_in">print</span>(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br></code></pre></td></tr></table></figure><p>这里就不那么专业用 logging 库来处理日志，随便 print 一下就好了</p><p>看着 console 不断刷屏，突然有几个字符引起了我的注意</p><p><code>shulker_box</code></p><p>对吼，我忘记处理潜影盒了！（≧□≦）ノ</p><h3 id="潜影盒处理">潜影盒处理</h3><p>再次启动 NBT Studio，找到一个潜影盒的数据结构</p><p>潜影盒内部物品的数据是储存在 <code>tag</code> 标签之下的，具体结构如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">...<br>id: minecraft:shulker<span class="hljs-emphasis">_box</span><br><span class="hljs-emphasis">tag:</span><br><span class="hljs-emphasis">└── BlockEntitiyTag:</span><br><span class="hljs-emphasis">    ├── id: minecraft:shulker_</span>box<br><span class="hljs-code">    └── Items:</span><br><span class="hljs-code">        └── ...</span><br></code></pre></td></tr></table></figure><p>其实也不复杂，无非就是把物品数据加进去了而已</p><p>加上考虑多一种情况就是潜影盒没有任何物品的时候，<code>Items</code> 标签并不会存在</p><p>那就重构一下代码，加多一个专门处理潜影盒的 function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">player_inventory_search</span>(<span class="hljs-params">data_file</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_shulker_box_item</span>(<span class="hljs-params">shulker_box</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>]:<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>][<span class="hljs-string">&quot;Items&quot;</span>]:<br>            count_item(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(item[<span class="hljs-string">&quot;Count&quot;</span>]))<br>            <span class="hljs-built_in">print</span>(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, item[<span class="hljs-string">&quot;Count&quot;</span>])<br><br>    target_file = nbtlib.load(data_file)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;Inventory&quot;</span>]:<br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-built_in">print</span>(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(i[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> i:<br>            search_shulker_box_item(i)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;EnderItems&quot;</span>]:<br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-built_in">print</span>(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(i[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> i:<br>            search_shulker_box_item(i)<br></code></pre></td></tr></table></figure><p>试着跑一下，看起来效果不错</p><p>看来玩家数据这一块算是搞腚力 (～o￣3￣)～</p><h2 id="区域文件">区域文件</h2><p>Minecraft 的 <code>.mca</code> 区域文件其实是由多个区块组成，每个区块以 NBT 标签的形式储存</p><p>也就是说，同样可以用 NBT 编辑器查看区域文件</p><p>众所周知，游戏中容器其实属于一个方块实体，所以很容易就能得知要查看哪个标签</p><p>所需的方块实体标签如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Chunk [x, y] in world at (x, y):<br>├── block<span class="hljs-emphasis">_entities:</span><br><span class="hljs-emphasis">│   └── ...</span><br><span class="hljs-emphasis">└── ...</span><br></code></pre></td></tr></table></figure><p>其中，根标签中的 [x, y] 为区块编号，各自从 0 - 31， 而后面的那个 (x, y) 则是区块坐标，要注意二者的不同</p><p>除了容器以外，其实还有很多其他方块是属于方块实体的，例如告示牌</p><p>因此我们要注意区分，下面我给个容器和非容器的数据标签作为例子</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs markdown">...<br>├── z: 0<br>├── x: 0<br>├── id: minecraft:bed<br>├── y: 10<br>└── keepPacked: 0<br>...<br>├── z: 1<br>├── x: 1<br>├── id minecraft:dropper<br>├── y: 10<br>├── Items:<br>│   └── ...<br>└── keepPacked: 0<br>...<br>├── z: 2<br>├── x: 2<br>├── TransferCooldown: 0<br>├── id: minecraft:hopper<br>├── y: 10<br>├── Items:<br>│   └── ...<br>└── keepPacked: 0<br></code></pre></td></tr></table></figure><p>从上可见，属于容器的数据标签均有他们的 <code>Items</code> 标签，所以要区分他们也不难</p><p>而 <code>Items</code> 标签内的物品数据和之前在玩家物品栏里的数据是通用、一样的</p><p>这就没什么难度了，重用读取物品那部分的代码即可</p><h2 id="获取区块容器数据">获取区块容器数据</h2><p><a href="https://github.com/matcool/anvil-parser/tree/master">anvil parser repo</a></p><p>同样，先看一遍 readme，<a href="https://github.com/matcool/anvil-parser/tree/master#usage">运用</a>的第一项也是<a href="https://github.com/matcool/anvil-parser/tree/master#reading">读取文件</a></p><p>照葫芦画瓢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> anvil<br><br>target_region = anvil.Region.from_file(<span class="hljs-string">&quot;r.0.0.mca&quot;</span>)<br><br>target_chunk = anvil.Chunk.from_region(target_region, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><blockquote><p>注意看，这 arguments 里的 0, 0 是指区块编号，也就是从 0 到 31 那个，而不是区块坐标</p></blockquote><p>打印一下内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(target_chunk)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">&lt;anvil.chunk.Chunk object at 0x000001320B34AAC0&gt;<br></code></pre></td></tr></table></figure><p>欸，这次的返回信息里没什么内容，虽然同样是 NBT 格式，难道这个库解析时没按照 NBT 来封装吗？</p><p>直接查源码</p><p>可以从 readme 里的示例发现，我们从库中的 <code>Chunk</code> class 调用了一个 <code>from_region</code> 的 function</p><p>那就试试从 <code>anvil\chunk.py</code> 这个文件里看看吧</p><p>果然，找到了些有趣的东西，片段代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Chunk</span>:<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">...</span>):<br>...<br>... <span class="hljs-comment"># 中间有很多其他 function，这里不一一列出</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_tile_entity</span>(<span class="hljs-params">...</span>):<br>...<br><span class="hljs-keyword">return</span> tile_entity<br><span class="hljs-meta">@classmethod</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">from_region</span>(<span class="hljs-params">cls, ...</span>):<br>...<br><span class="hljs-keyword">return</span> cls(nbt_data)<br></code></pre></td></tr></table></figure><p><code>from_region</code> 是属于 class method，所以返回值中还可以继续调用这个 class 里的 function</p><p>而其中，我找到了个 <code>get_tile_entity</code> 的 function，作者注释如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Returns the tile entity at given coordinates, or ``None`` if there isn&#x27;t a tile entity</span><br><span class="hljs-string"></span><br><span class="hljs-string">To iterate through all tile entities in the chunk, use :class:`Chunk.tile_entities`</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>那就按照注释所说，试试看吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> target_chunk.tile_entities:  <br>    te = target_chunk.tile_entities  <br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> te:  <br>        <span class="hljs-built_in">print</span>(k)<br></code></pre></td></tr></table></figure><p>嚯，雀食能读到些东西出来</p><p>再翻翻在这个 class 里，返回的 <code>nbt_data</code> 能怎么使用</p><p>欸，都有 python <code>indexer []</code> 的 implementation</p><p>那就好办了，同样直接暴力搜索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">region_search</span>(<span class="hljs-params">region_file</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_shulker_box_item</span>(<span class="hljs-params">shulker_box</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>]:<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>][<span class="hljs-string">&quot;Items&quot;</span>]:<br>            count_item(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(item[<span class="hljs-string">&quot;Count&quot;</span>])))<br>            <span class="hljs-built_in">print</span>(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-string">&quot; &quot;</span>, item[<span class="hljs-string">&quot;Count&quot;</span>])<br><br>    target_region = anvil.Region.from_file(region_file)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):<br>chunk = anvil.Chunk.from_region(target_region, i, j)<br><span class="hljs-keyword">if</span> chunk.tile_entities:<br>te = chunk.tile_entities<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> te:<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> k:<br><span class="hljs-keyword">continue</span><br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> k[<span class="hljs-string">&quot;Items&quot;</span>]:<br>count_item(a[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;Count&quot;</span>])))<br><span class="hljs-comment"># print(a[&quot;id&quot;], &quot; &quot;, a[&quot;Count&quot;])</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> a:<br>search_shulker_box_item(a)<br></code></pre></td></tr></table></figure><p>哎，不错不错，这个脚本的核心就差不多写完了</p><p>不过，在尝试几次之后就发现了异常，抛了个 <code>IndexError</code></p><p>通过编辑器打开有问题的文件看看，似乎时文件本身就有点问题</p><p>管那么多干嘛，直接 <code>except</code> 就完事了 =￣ω￣=</p><p>不久后又有个异常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">anvil.errors.ChunkNotFound: Could not find chunk (0, 0)<br></code></pre></td></tr></table></figure><p>有趣，顺着文件我找了下成因：</p><p>由于 Minecraft 区块生成机制是一个区块一个区块来的，而不是整个区域</p><p>因此处于探索边界地区的区域文件并没有含有全部区块，而是部分</p><p>所以在尝试读取未生成的区块时，就抛出了这个异常</p><p>最后的最后，这个区域文件搜索终于做完了。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">region_search</span>(<span class="hljs-params">region_file</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_shulker_box_item</span>(<span class="hljs-params">shulker_box</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>]:<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>][<span class="hljs-string">&quot;Items&quot;</span>]:<br>            count_item(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(item[<span class="hljs-string">&quot;Count&quot;</span>])))<br>            <span class="hljs-comment"># print(item[&quot;id&quot;], &quot; &quot;, item[&quot;Count&quot;])</span><br><br>    target_region = anvil.Region.from_file(region_file)<br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):<br>                <span class="hljs-keyword">try</span>:<br>                    chunk = anvil.Chunk.from_region(target_region, i, j)<br>                    <span class="hljs-keyword">if</span> chunk.tile_entities:<br>                        te = chunk.tile_entities<br>                        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> te:<br>                            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> k:<br>                                <span class="hljs-keyword">continue</span><br>                            <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> k[<span class="hljs-string">&quot;Items&quot;</span>]:<br>                                count_item(a[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;Count&quot;</span>])))<br>                                <span class="hljs-comment"># print(a[&quot;id&quot;], &quot; &quot;, a[&quot;Count&quot;])</span><br>                                <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> a:<br>                                    search_shulker_box_item(a)<br>                <span class="hljs-keyword">except</span> ChunkNotFound:<br>                    <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">except</span> IndexError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;e&#125;</span>, when searching region <span class="hljs-subst">&#123;region_file&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h1>整合</h1><p>这个搜索程序的俩个核心模块已经完成了，是时候做个数据输出</p><p>该怎么让这个脚本读取数据存档呢</p><p>我想到的解决方案是以命令行的方式来使用脚本，通过添加执行参数来确定存档位置</p><p>类似这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">python mc-item-canner.py -w &lt;world directory&gt; ...<br></code></pre></td></tr></table></figure><p>为了实现这个功能，这里使用了 <a href="https://docs.python.org/3/library/argparse.html">argparse</a> ，一个命令行选项的解析器</p><p>用法也很简单，看俩下文档就会了，这里就不浪费篇幅</p><p>我需要的参数也就俩个，一个是存档位置，另一个是输出</p><p>局部代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><br>aparser = argparse.ArgumentParser(description=<span class="hljs-string">r&quot;path of \world&quot;</span>)  <br>aparser.add_argument(<span class="hljs-string">&#x27;-o&#x27;</span>, <span class="hljs-string">&#x27;--outdirectory&#x27;</span>, default=<span class="hljs-string">r&#x27;.\\&#x27;</span>)  <br>aparser.add_argument(<span class="hljs-string">&#x27;-w&#x27;</span>, <span class="hljs-string">&#x27;--worlddirectory&#x27;</span>, default=<span class="hljs-string">r&#x27;.\\&#x27;</span>)  <br>  <br>args = aparser.parse_args()  <br>PATH_OUTDIR = args.outdirectory  <br>PATH_WORLD = args.worlddirectory<br></code></pre></td></tr></table></figure><p>功能也就那些：</p><ul class="lvl-0"><li class="lvl-2"><p>解析存档目录并保存到 <code>PATH_WORLD</code></p></li><li class="lvl-2"><p>解析输出目录并保存到 <code>PATH_OUTDIR</code></p></li></ul><h2 id="数据输出">数据输出</h2><p>直接将没有任何处理得数据扔出去并不算是做了数据处理</p><p><s>虽然这里也只是把一堆字典变成 <code>.csv</code> 格式罢了</s></p><p>这边随便调用下 <a href="https://docs.python.org/3/library/csv.html">csv</a> 的库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><br>item_record: <span class="hljs-built_in">dict</span> = &#123;&#125; <span class="hljs-comment"># 储存物品记录</span><br><br>...<br>...<br><span class="hljs-comment"># 记录输出部分</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">fr&#x27;<span class="hljs-subst">&#123;PATH_OUTDIR&#125;</span>\results.csv&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf8&#x27;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> out:  <br>    writer = csv.writer(out)  <br>    writer.writerow([<span class="hljs-string">&quot;item&quot;</span>, <span class="hljs-string">&quot;count&quot;</span>])  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> item_record.items():  <br>        writer.writerow(<span class="hljs-built_in">list</span>(i))<br></code></pre></td></tr></table></figure><p>很简单，物品输出就做完了</p><p>至于为什么要用 <code>.csv</code> 格式，因为方便啊！</p><p>原始数据并不需要过多的处理就可以直接变成 csv 文件，而且这个文件格式可以直接拿到 excel 里做其他分析，不香吗？</p><h2 id="main">main()</h2><p>主函数要做的只有三件事</p><ul class="lvl-0"><li class="lvl-2"><p>收集并过滤数据</p></li><li class="lvl-2"><p>数据处理</p></li><li class="lvl-2"><p>输出</p></li></ul><p>也就是过滤数据那里有些麻烦罢了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br><span class="hljs-comment"># 检查路径，路径有问题就报错</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isdir(PATH_OUTDIR):  <br>        <span class="hljs-keyword">raise</span> NotADirectoryError(<span class="hljs-string">&quot;the outdirectory specified is not a directory&quot;</span>)  <br><br><span class="hljs-comment"># 检查文件是否为存档</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;level.dat&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> os.listdir(PATH_WORLD):  <br>        <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">&quot;file: level.dat cannot be found in the world directory!&quot;</span>)  <br><br><span class="hljs-comment"># 几个连续的搜索尝试</span><br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \playerdata&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\playerdata&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.dat&quot;</span>):  <br>                player_inventory_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\playerdata\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \playerdata cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \region cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \DIM1\region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM1\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM1\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \DIM1\region cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \DIM-1\region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM-1\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM-1\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \DIM-1\region cannot be found in the world directory&quot;</span>)  <br><br><span class="hljs-comment"># 文件输出</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">fr&#x27;<span class="hljs-subst">&#123;PATH_OUTDIR&#125;</span>\results.csv&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf8&#x27;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> out:  <br>        writer = csv.writer(out)  <br>        writer.writerow([<span class="hljs-string">&quot;item&quot;</span>, <span class="hljs-string">&quot;count&quot;</span>])  <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> item_record.items():  <br>            writer.writerow(<span class="hljs-built_in">list</span>(i))<br></code></pre></td></tr></table></figure><p>到这里，所有代码都写完了</p><p>完整文件如下，或者可以直接到我的 <a href="https://github.com/BlissfulAlloy79/mc-item-scanner/blob/main/mc-item-scanner.py">Github 仓库</a>查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> nbtlib  <br><span class="hljs-keyword">import</span> anvil  <br><span class="hljs-keyword">from</span> anvil.errors <span class="hljs-keyword">import</span> ChunkNotFound  <br><span class="hljs-keyword">import</span> os  <br><span class="hljs-keyword">import</span> argparse  <br><span class="hljs-keyword">import</span> csv  <br>  <br>  <br>aparser = argparse.ArgumentParser(description=<span class="hljs-string">r&quot;path of \world&quot;</span>)  <br>aparser.add_argument(<span class="hljs-string">&#x27;-o&#x27;</span>, <span class="hljs-string">&#x27;--outdirectory&#x27;</span>, default=<span class="hljs-string">r&#x27;.\\&#x27;</span>)  <br>aparser.add_argument(<span class="hljs-string">&#x27;-w&#x27;</span>, <span class="hljs-string">&#x27;--worlddirectory&#x27;</span>, default=<span class="hljs-string">r&#x27;.\\&#x27;</span>)  <br>  <br>args = aparser.parse_args()  <br>PATH_OUTDIR = args.outdirectory  <br>PATH_WORLD = args.worlddirectory  <br>  <br>item_record: <span class="hljs-built_in">dict</span> = &#123;&#125;  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">count_item</span>(<span class="hljs-params">item_id, item_count: <span class="hljs-built_in">int</span></span>):  <br>    item_id: <span class="hljs-built_in">str</span> = <span class="hljs-built_in">str</span>(item_id)  <br>    <span class="hljs-keyword">if</span> item_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> item_record:  <br>        item_record[item_id] = <span class="hljs-number">0</span>  <br>    item_record[item_id] += item_count  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">region_search</span>(<span class="hljs-params">region_file</span>):  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_shulker_box_item</span>(<span class="hljs-params">shulker_box</span>):  <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>]:  <br>            <span class="hljs-keyword">return</span>  <br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>][<span class="hljs-string">&quot;Items&quot;</span>]:  <br>            count_item(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(item[<span class="hljs-string">&quot;Count&quot;</span>])))  <br>            <span class="hljs-comment"># print(item[&quot;id&quot;], &quot; &quot;, item[&quot;Count&quot;])  </span><br>  <br>    target_region = anvil.Region.from_file(region_file)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):  <br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):  <br>                <span class="hljs-keyword">try</span>:  <br>                    chunk = anvil.Chunk.from_region(target_region, i, j)  <br>                    <span class="hljs-keyword">if</span> chunk.tile_entities:  <br>                        te = chunk.tile_entities  <br>                        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> te:  <br>                            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> k:  <br>                                <span class="hljs-keyword">continue</span>  <br>                            <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> k[<span class="hljs-string">&quot;Items&quot;</span>]:  <br>                                count_item(a[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;Count&quot;</span>])))  <br>                                <span class="hljs-comment"># print(a[&quot;id&quot;], &quot; &quot;, a[&quot;Count&quot;])  </span><br>                                <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(a[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> a:  <br>                                    search_shulker_box_item(a)  <br>                <span class="hljs-keyword">except</span> ChunkNotFound:  <br>                    <span class="hljs-keyword">pass</span>  <br>    <span class="hljs-keyword">except</span> IndexError <span class="hljs-keyword">as</span> e:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;e&#125;</span>, when searching region <span class="hljs-subst">&#123;region_file&#125;</span>&quot;</span>)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">player_inventory_search</span>(<span class="hljs-params">data_file</span>):  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_shulker_box_item</span>(<span class="hljs-params">shulker_box</span>):  <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Items&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>]:  <br>            <span class="hljs-keyword">return</span>  <br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> shulker_box[<span class="hljs-string">&quot;tag&quot;</span>][<span class="hljs-string">&quot;BlockEntityTag&quot;</span>][<span class="hljs-string">&quot;Items&quot;</span>]:  <br>            count_item(item[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(item[<span class="hljs-string">&quot;Count&quot;</span>]))  <br>            <span class="hljs-comment"># print(item[&quot;id&quot;], &quot; &quot;, item[&quot;Count&quot;])  </span><br>  <br>    target_file = nbtlib.load(data_file)  <br>  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;Inventory&quot;</span>]:  <br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))  <br>        <span class="hljs-comment"># print(i[&quot;id&quot;], &quot; &quot;, int(i[&quot;Count&quot;]))  </span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(i[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> i:  <br>            search_shulker_box_item(i)  <br>  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target_file[<span class="hljs-string">&quot;EnderItems&quot;</span>]:  <br>        count_item(i[<span class="hljs-string">&quot;id&quot;</span>], <span class="hljs-built_in">int</span>(i[<span class="hljs-string">&quot;Count&quot;</span>]))  <br>        <span class="hljs-comment"># print(i[&quot;id&quot;], &quot; &quot;, int(i[&quot;Count&quot;]))  </span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(i[<span class="hljs-string">&quot;id&quot;</span>]).endswith(<span class="hljs-string">&quot;shulker_box&quot;</span>) <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;tag&quot;</span> <span class="hljs-keyword">in</span> i:  <br>            search_shulker_box_item(i)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():  <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isdir(PATH_OUTDIR):  <br>        <span class="hljs-keyword">raise</span> NotADirectoryError(<span class="hljs-string">&quot;the outdirectory specified is not a directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;level.dat&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> os.listdir(PATH_WORLD):  <br>        <span class="hljs-keyword">raise</span> FileNotFoundError(<span class="hljs-string">&quot;file: level.dat cannot be found in the world directory!&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \playerdata&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\playerdata&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.dat&quot;</span>):  <br>                player_inventory_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\playerdata\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \playerdata cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \region cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \DIM1\region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM1\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM1\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \DIM1\region cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-keyword">try</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;searching \DIM-1\region&quot;</span>)  <br>        <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM-1\region&quot;</span>):  <br>            <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">&quot;.mca&quot;</span>):  <br>                region_search(<span class="hljs-string">fr&quot;<span class="hljs-subst">&#123;PATH_WORLD&#125;</span>\DIM-1\region\&#123;f&#125;&quot;</span>)  <br>    <span class="hljs-keyword">except</span> FileNotFoundError:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">r&quot;directory: \DIM-1\region cannot be found in the world directory&quot;</span>)  <br>  <br>    <span class="hljs-comment"># print(item_record)  </span><br>  <br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">fr&#x27;<span class="hljs-subst">&#123;PATH_OUTDIR&#125;</span>\results.csv&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf8&#x27;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> out:  <br>        writer = csv.writer(out)  <br>        writer.writerow([<span class="hljs-string">&quot;item&quot;</span>, <span class="hljs-string">&quot;count&quot;</span>])  <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> item_record.items():  <br>            writer.writerow(<span class="hljs-built_in">list</span>(i))  <br>  <br>  <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:  <br>    main()<br></code></pre></td></tr></table></figure><h1>小结</h1><p>以上就是我第一个小项目的编程心得</p><p>很明显，逻辑相对来说比较混乱，因为一开始并没有一个明确的目标</p><p>这点虽然在平时这种脚本中并没有什么大碍，但是我认为有更好的编程思路可以去学习，参考</p><p>『学不可以已』，一切都只是一个开始，希望在日后的的项目中能有所改进 ψ(｀∇´)ψ</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>笔记</tag>
      
      <tag>Minecraft</tag>
      
      <tag>随手搓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 个人美化合集</title>
    <link href="/05-hexodeco/"/>
    <url>/05-hexodeco/</url>
    
    <content type="html"><![CDATA[<blockquote><p>个人博客的美化合集</p></blockquote><span id="more"></span><hr><h1>添加背景动态线条效果</h1><p>此效果利用了 <a href="https://hexo.io/zh-cn/api/injector.html">Hexo 注入器</a></p><p>动态线条参考自<a href="https://zhuanlan.zhihu.com/p/69211731">这篇文章</a></p><ol><li class="lvl-3"><p>在博客文件夹的 <code>/source/js/</code> 里添加一个名为 <code>blacklines.js</code> 的文件</p><p>文件内容如下：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">w,v,i</span>)&#123;<span class="hljs-keyword">return</span> w.<span class="hljs-title function_">getAttribute</span>(v)||i&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">j</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(i)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;script&quot;</span>),w=i.<span class="hljs-property">length</span>,v=i[w-<span class="hljs-number">1</span>];<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">l</span>:w,<span class="hljs-attr">z</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;zIndex&quot;</span>,-<span class="hljs-number">1</span>),<span class="hljs-attr">o</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;opacity&quot;</span>,<span class="hljs-number">0.5</span>),<span class="hljs-attr">c</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;color&quot;</span>,<span class="hljs-string">&quot;0,0,0&quot;</span>),<span class="hljs-attr">n</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;count&quot;</span>,<span class="hljs-number">99</span>)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params"></span>)&#123;r=u.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>,n=u.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,r,n);<span class="hljs-keyword">var</span> w=[f].<span class="hljs-title function_">concat</span>(t);<span class="hljs-keyword">var</span> x,v,A,B,z,y;t.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i.<span class="hljs-property">x</span>+=i.<span class="hljs-property">xa</span>,i.<span class="hljs-property">y</span>+=i.<span class="hljs-property">ya</span>,i.<span class="hljs-property">xa</span>*=i.<span class="hljs-property">x</span>&gt;r||i.<span class="hljs-property">x</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,i.<span class="hljs-property">ya</span>*=i.<span class="hljs-property">y</span>&gt;n||i.<span class="hljs-property">y</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,e.<span class="hljs-title function_">fillRect</span>(i.<span class="hljs-property">x</span>-<span class="hljs-number">0.5</span>,i.<span class="hljs-property">y</span>-<span class="hljs-number">0.5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span>(v=<span class="hljs-number">0</span>;v&lt;w.<span class="hljs-property">length</span>;v++)&#123;x=w[v];<span class="hljs-keyword">if</span>(i!==x&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">x</span>&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">y</span>)&#123;B=i.<span class="hljs-property">x</span>-x.<span class="hljs-property">x</span>,z=i.<span class="hljs-property">y</span>-x.<span class="hljs-property">y</span>,y=B*B+z*z;y&lt;x.<span class="hljs-property">max</span>&amp;&amp;(x===f&amp;&amp;y&gt;=x.<span class="hljs-property">max</span>/<span class="hljs-number">2</span>&amp;&amp;(i.<span class="hljs-property">x</span>-=<span class="hljs-number">0.03</span>*B,i.<span class="hljs-property">y</span>-=<span class="hljs-number">0.03</span>*z),A=(x.<span class="hljs-property">max</span>-y)/x.<span class="hljs-property">max</span>,e.<span class="hljs-title function_">beginPath</span>(),e.<span class="hljs-property">lineWidth</span>=A/<span class="hljs-number">2</span>,e.<span class="hljs-property">strokeStyle</span>=<span class="hljs-string">&quot;rgba(&quot;</span>+s.<span class="hljs-property">c</span>+<span class="hljs-string">&quot;,&quot;</span>+(A+<span class="hljs-number">0.2</span>)+<span class="hljs-string">&quot;)&quot;</span>,e.<span class="hljs-title function_">moveTo</span>(i.<span class="hljs-property">x</span>,i.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">lineTo</span>(x.<span class="hljs-property">x</span>,x.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">stroke</span>())&#125;&#125;w.<span class="hljs-title function_">splice</span>(w.<span class="hljs-title function_">indexOf</span>(i),<span class="hljs-number">1</span>)&#125;),<span class="hljs-title function_">m</span>(b)&#125;<span class="hljs-keyword">var</span> u=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>),s=<span class="hljs-title function_">l</span>(),c=<span class="hljs-string">&quot;c_n&quot;</span>+s.<span class="hljs-property">l</span>,e=u.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),r,n,m=<span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span>||<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(i,<span class="hljs-number">1000</span>/<span class="hljs-number">45</span>)&#125;,a=<span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>,f=&#123;<span class="hljs-attr">x</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">y</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">max</span>:<span class="hljs-number">20000</span>&#125;;u.<span class="hljs-property">id</span>=c;u.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span>+s.<span class="hljs-property">z</span>+<span class="hljs-string">&quot;;opacity:&quot;</span>+s.<span class="hljs-property">o</span>;<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(u);<span class="hljs-title function_">k</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span>=k;<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmousemove</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i=i||<span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>,f.<span class="hljs-property">x</span>=i.<span class="hljs-property">clientX</span>,f.<span class="hljs-property">y</span>=i.<span class="hljs-property">clientY</span>&#125;,<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmouseout</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;f.<span class="hljs-property">x</span>=<span class="hljs-literal">null</span>,f.<span class="hljs-property">y</span>=<span class="hljs-literal">null</span>&#125;;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=[],p=<span class="hljs-number">0</span>;s.<span class="hljs-property">n</span>&gt;p;p++)&#123;<span class="hljs-keyword">var</span> h=<span class="hljs-title function_">a</span>()*r,g=<span class="hljs-title function_">a</span>()*n,q=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>,d=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>;t.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">x</span>:h,<span class="hljs-attr">y</span>:g,<span class="hljs-attr">xa</span>:q,<span class="hljs-attr">ya</span>:d,<span class="hljs-attr">max</span>:<span class="hljs-number">6000</span>&#125;)&#125;<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">b</span>()&#125;,<span class="hljs-number">100</span>)&#125;();<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>前往博客根目录下的 <code>/scripts</code> 文件夹，如果没有则创建一个，然后任意命名创建一个 js 文件，内容为下：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;body_end&#x27;</span>, <span class="hljs-string">`</span><br><span class="hljs-string">&lt;script type=&quot;text/javascript&quot; color=&quot;220,220,220&quot; opacity=&#x27;0.7&#x27; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;/js/blacklines.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">`</span>)<br></code></pre></td></tr></table></figure><p>其中 <code>&lt;script&gt;</code> 部分：</p><ul class="lvl-2"><li class="lvl-6"><p>color: 表示线条颜色，分别对应 RGB 三种颜色，默认 0，0，0</p></li><li class="lvl-6"><p>opacity: 表示线条透明度（0 ~ 1），默认 0.5</p></li><li class="lvl-6"><p>zIndex: 表示背景的 z-index 属性， css属性用于控制所在层的位置，默认 -1</p></li><li class="lvl-6"><p>count: 表示线条的总数量，默认 150</p></li></ul></li></ol><p>此时页面背景应该会出现动态线条了</p><h1>页脚添加网站运行时长</h1><p>参考自 <a href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/">Hexo Theme Fluid</a></p><ol><li class="lvl-3"><p>在博客根目录下的 <code>/source/js/</code> 里添加一个名为 <code>duration.js</code> 的文件</p><p>文件内容如下：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;  <br><span class="hljs-comment">/** 计时起始时间，自行修改 **/</span>  <br><span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;2020/01/01 00:00:00&quot;</span>);  <br>  <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) &#123;  <br><span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();  <br>now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>);  <br>days = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>;  <br>dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days);  <br>hours = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum);  <br>hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours);  <br><span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;  <br>hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;  <br>&#125;  <br>minutes = (now - start) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum);  <br>mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes);  <br><span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;  <br>mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;  <br>&#125;  <br>seconds = (now - start) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum);  <br>snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds);  <br><span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;  <br>snum = <span class="hljs-string">&quot;0&quot;</span> + snum;  <br>&#125;  <br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站安全运行&amp;nbsp&quot;</span>+dnum+<span class="hljs-string">&quot;&amp;nbsp天&quot;</span>;  <br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class="hljs-string">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class="hljs-string">&quot;&amp;nbsp秒&quot;</span>;  <br>&#125;  <br>  <br><span class="hljs-title function_">update</span>();  <br><span class="hljs-built_in">setInterval</span>(update, <span class="hljs-number">1000</span>);  <br>&#125;)();<br></code></pre></td></tr></table></figure> <div class="note note-warning">            <p>不要忘记把上面注释的时间改为自己的时间</p>          </div></li><li class="lvl-3"><p>前往博客主题配置， fluid 的话就是 <code>_config.fluid.yml</code></p><p>在 <code>footer: content</code> 中添加如下内容：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml">footer:  <br>content: &#x27;  <br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://hexo.io&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Hexo<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-love&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Fluid<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 0.85rem&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/duration.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>&#x27;<br></code></pre></td></tr></table></figure> <div class="note note-warning">            <p>注意，<code>content</code> 前三行是 Fluid 原有的页脚内容，不建议删除，可稍做修改，保留 Fluid 的超链接，用于向更多人推广主题</p>          </div></li></ol><h1>添加简繁转换</h1><p>Fluid 主题本身并没有提供简体繁体一键互换功能，但是我又不想换成其他主题，于是就硬添加了一个</p><div class="note note-info">            <p>鉴于本人并不会 JavaScript 以及其他 web 相关的编程，此方法仍有观感上的小 bug</p>          </div><div class="note note-warning">            <p>此方法对于原版入侵性较大，可能会影响主题升级</p>          </div><p>简繁互换脚本参考自<a href="https://1han.wiki/Hexo-FanorJian/">这篇文章</a></p><ol><li class="lvl-3"><p>在博客根目录下的 <code>/source/js/</code> 里添加一个名为 <code>tw_cn.js</code> 的文件：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> defaultEncoding = <span class="hljs-number">2</span>; <span class="hljs-comment">// 网站默认语言，1: 繁體中文, 2: 简体中文</span><br><span class="hljs-keyword">var</span> translateDelay = <span class="hljs-number">0</span>; <span class="hljs-comment">//延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class="hljs-keyword">var</span> cookieDomain = <span class="hljs-string">&quot;https://blissfulalloy79.lazycraft.top&quot;</span>; <span class="hljs-comment">//更改为你的博客网址</span><br><span class="hljs-keyword">var</span> msgToTraditionalChinese = <span class="hljs-string">&quot;繁&quot;</span>; <span class="hljs-comment">//此处可以更改为你想要显示的文字</span><br><span class="hljs-keyword">var</span> msgToSimplifiedChinese = <span class="hljs-string">&quot;简&quot;</span>; <span class="hljs-comment">//同上，但两处均不建议更改</span><br><span class="hljs-keyword">var</span> translateButtonId = <span class="hljs-string">&quot;translateLink&quot;</span>; <span class="hljs-comment">//默认互换id</span><br><span class="hljs-keyword">var</span> currentEncoding = defaultEncoding;<br><span class="hljs-keyword">var</span> targetEncodingCookie = <span class="hljs-string">&quot;targetEncoding&quot;</span> + cookieDomain.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\./g</span>, <span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-keyword">var</span> targetEncoding = (<span class="hljs-title function_">getCookie</span>(targetEncodingCookie) == <span class="hljs-literal">null</span> ? defaultEncoding : <span class="hljs-title function_">getCookie</span>(targetEncodingCookie));<br><span class="hljs-keyword">var</span> translateButtonObject;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">translateText</span>(<span class="hljs-params">txt</span>) &#123;<br><span class="hljs-keyword">if</span> (txt == <span class="hljs-string">&quot;&quot;</span> || txt == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">if</span> (currentEncoding == <span class="hljs-number">1</span> &amp;&amp; targetEncoding == <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> <span class="hljs-title class_">Simplized</span>(txt);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (currentEncoding == <span class="hljs-number">2</span> &amp;&amp; targetEncoding == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-title class_">Traditionalized</span>(txt);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> txt<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">translateBody</span>(<span class="hljs-params">fobj</span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> (fobj) == <span class="hljs-string">&quot;object&quot;</span>) <span class="hljs-keyword">var</span> objs = fobj.<span class="hljs-property">childNodes</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">var</span> objs = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">childNodes</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; objs.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-keyword">var</span> obj = objs.<span class="hljs-title function_">item</span>(i);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;||BR|HR|TEXTAREA|&quot;</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;|&quot;</span> + obj.<span class="hljs-property">tagName</span> + <span class="hljs-string">&quot;|&quot;</span>) &gt; <span class="hljs-number">0</span> || obj == translateButtonObject) <span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span> (obj.<span class="hljs-property">title</span> != <span class="hljs-string">&quot;&quot;</span> &amp;&amp; obj.<span class="hljs-property">title</span> != <span class="hljs-literal">null</span>) obj.<span class="hljs-property">title</span> = <span class="hljs-title function_">translateText</span>(obj.<span class="hljs-property">title</span>);<br><span class="hljs-keyword">if</span> (obj.<span class="hljs-property">alt</span> != <span class="hljs-string">&quot;&quot;</span> &amp;&amp; obj.<span class="hljs-property">alt</span> != <span class="hljs-literal">null</span>) obj.<span class="hljs-property">alt</span> = <span class="hljs-title function_">translateText</span>(obj.<span class="hljs-property">alt</span>);<br><span class="hljs-keyword">if</span> (obj.<span class="hljs-property">tagName</span> == <span class="hljs-string">&quot;INPUT&quot;</span> &amp;&amp; obj.<span class="hljs-property">value</span> != <span class="hljs-string">&quot;&quot;</span> &amp;&amp; obj.<span class="hljs-property">type</span> != <span class="hljs-string">&quot;text&quot;</span> &amp;&amp; obj.<span class="hljs-property">type</span> != <span class="hljs-string">&quot;hidden&quot;</span>) obj.<span class="hljs-property">value</span> = <span class="hljs-title function_">translateText</span>(obj.<span class="hljs-property">value</span>);<br><span class="hljs-keyword">if</span> (obj.<span class="hljs-property">nodeType</span> == <span class="hljs-number">3</span>) obj.<span class="hljs-property">data</span> = <span class="hljs-title function_">translateText</span>(obj.<span class="hljs-property">data</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-title function_">translateBody</span>(obj)<br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">translatePage</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (targetEncoding == <span class="hljs-number">1</span>) &#123;<br>currentEncoding = <span class="hljs-number">1</span>;<br>targetEncoding = <span class="hljs-number">2</span>;<br>translateButtonObject.<span class="hljs-property">innerHTML</span> = msgToTraditionalChinese;<br><span class="hljs-title function_">setCookie</span>(targetEncodingCookie, targetEncoding, <span class="hljs-number">7</span>);<br><span class="hljs-title function_">translateBody</span>()<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (targetEncoding == <span class="hljs-number">2</span>) &#123;<br>currentEncoding = <span class="hljs-number">2</span>;<br>targetEncoding = <span class="hljs-number">1</span>;<br>translateButtonObject.<span class="hljs-property">innerHTML</span> = msgToSimplifiedChinese;<br><span class="hljs-title function_">setCookie</span>(targetEncodingCookie, targetEncoding, <span class="hljs-number">7</span>);<br><span class="hljs-title function_">translateBody</span>()<br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">JTPYStr</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾鼋鼌鼍鼗鼹齄齐齑齿龀龁龂龃龄龅龆龇龈龉龊龋龌龙龚龛龟志制咨只里系范松没尝尝闹面准钟别闲干尽脏拼&#x27;</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">FTPYStr</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽黿鼂鼉鞀鼴齇齊齏齒齔齕齗齟齡齙齠齜齦齬齪齲齷龍龔龕龜誌製谘隻裡係範鬆冇嚐嘗鬨麵準鐘彆閒乾儘臟拚&#x27;</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Traditionalized</span>(<span class="hljs-params">cc</span>) &#123;<br><span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> ss = <span class="hljs-title class_">JTPYStr</span>();<br><span class="hljs-keyword">var</span> tt = <span class="hljs-title class_">FTPYStr</span>();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; cc.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-keyword">if</span> (cc.<span class="hljs-title function_">charCodeAt</span>(i) &gt; <span class="hljs-number">10000</span> &amp;&amp; ss.<span class="hljs-title function_">indexOf</span>(cc.<span class="hljs-title function_">charAt</span>(i)) != -<span class="hljs-number">1</span>) str += tt.<span class="hljs-title function_">charAt</span>(ss.<span class="hljs-title function_">indexOf</span>(cc.<span class="hljs-title function_">charAt</span>(i)));<br><span class="hljs-keyword">else</span> str += cc.<span class="hljs-title function_">charAt</span>(i)<br>&#125;<br><span class="hljs-keyword">return</span> str<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Simplized</span>(<span class="hljs-params">cc</span>) &#123;<br><span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> ss = <span class="hljs-title class_">JTPYStr</span>();<br><span class="hljs-keyword">var</span> tt = <span class="hljs-title class_">FTPYStr</span>();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; cc.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-keyword">if</span> (cc.<span class="hljs-title function_">charCodeAt</span>(i) &gt; <span class="hljs-number">10000</span> &amp;&amp; tt.<span class="hljs-title function_">indexOf</span>(cc.<span class="hljs-title function_">charAt</span>(i)) != -<span class="hljs-number">1</span>) str += ss.<span class="hljs-title function_">charAt</span>(tt.<span class="hljs-title function_">indexOf</span>(cc.<span class="hljs-title function_">charAt</span>(i)));<br><span class="hljs-keyword">else</span> str += cc.<span class="hljs-title function_">charAt</span>(i)<br>&#125;<br><span class="hljs-keyword">return</span> str<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setCookie</span>(<span class="hljs-params">name, value, days</span>) &#123;<br><span class="hljs-keyword">if</span> (days) &#123;<br><span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>date.<span class="hljs-title function_">setTime</span>(date.<span class="hljs-title function_">getTime</span>() + (days * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>));<br><span class="hljs-keyword">var</span> expires = <span class="hljs-string">&quot;; expires=&quot;</span> + date.<span class="hljs-title function_">toGMTString</span>()<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">var</span> expires = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span> = name + <span class="hljs-string">&quot;=&quot;</span> + value + expires + <span class="hljs-string">&quot;; path=/&quot;</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCookie</span>(<span class="hljs-params">name</span>) &#123;<br><span class="hljs-keyword">var</span> nameEQ = name + <span class="hljs-string">&quot;=&quot;</span>;<br><span class="hljs-keyword">var</span> ca = <span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;;&#x27;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; ca.<span class="hljs-property">length</span>; i++) &#123;<br><span class="hljs-keyword">var</span> c = ca[i];<br><span class="hljs-keyword">while</span> (c.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>) == <span class="hljs-string">&#x27; &#x27;</span>) c = c.<span class="hljs-title function_">substring</span>(<span class="hljs-number">1</span>, c.<span class="hljs-property">length</span>);<br><span class="hljs-keyword">if</span> (c.<span class="hljs-title function_">indexOf</span>(nameEQ) == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">substring</span>(nameEQ.<span class="hljs-property">length</span>, c.<span class="hljs-property">length</span>)<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">translateInitilization</span>(<span class="hljs-params"></span>) &#123;<br>translateButtonObject = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(translateButtonId);<br><span class="hljs-keyword">if</span> (translateButtonObject) &#123;<br><span class="hljs-keyword">with</span> (translateButtonObject) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">all</span>) != <span class="hljs-string">&quot;object&quot;</span>) &#123;<br>href = <span class="hljs-string">&quot;javascript:translatePage();&quot;</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>href = <span class="hljs-string">&quot;#&quot;</span>;<br>onclick = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>(<span class="hljs-string">&quot;translatePage(); return false;&quot;</span>)<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (currentEncoding != targetEncoding) &#123;<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&quot;translateBody()&quot;</span>, translateDelay);<br><span class="hljs-keyword">if</span> (targetEncoding == <span class="hljs-number">1</span>) translateButtonObject.<span class="hljs-property">innerHTML</span> = msgToSimplifiedChinese;<br><span class="hljs-keyword">else</span> translateButtonObject.<span class="hljs-property">innerHTML</span> = msgToTraditionalChinese<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure> <div class="note note-warning">            <p>记得修改 <code>cookieDomain</code></p>          </div></li><li class="lvl-3"><p>打开博客根目录下的 `/themes/fluid/layout/_partials/header/navigation.ejs</p><p>在最后一个 <code>&lt;li&gt;</code> 以及关引号 <code>&lt;% &#125; %&gt;</code> 标签之后再添加内容：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;translateLink&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:translatePage();&quot;</span>&gt;</span></span><br><span class="language-xml">繁</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/tw_cn.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> defaultEncoding = <span class="hljs-number">2</span>; <span class="hljs-comment">//网站编写字体是否繁体，1-繁体，2-简体</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> translateDelay = <span class="hljs-number">0</span>; <span class="hljs-comment">//延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> cookieDomain = <span class="hljs-string">&quot;https://blissfulalloy79.lazycraft.top&quot;</span>; <span class="hljs-comment">//Cookie地址, 一定要设定, 通常为你的网址</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> msgToTraditionalChinese = <span class="hljs-string">&quot;繁&quot;</span> <span class="hljs-comment">//此处可以更改为你想要显示的文字</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> msgToSimplifiedChinese = <span class="hljs-string">&quot;简&quot;</span> <span class="hljs-comment">//同上，但两处均不建议更改</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> translateButtonId = <span class="hljs-string">&quot;translateLink&quot;</span>; <span class="hljs-comment">//默认互换id</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">translateInitilization</span>();</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/li&gt;<br></code></pre></td></tr></table></figure> <div class="note note-warning">            <p>记得修改 <code>cookieDomain</code></p>          </div><p>完成之后，<code>navigation.ejs</code> 应该如下：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;nav id=<span class="hljs-string">&quot;navbar&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar fixed-top  navbar-expand-lg navbar-dark scrolling-navbar&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-brand&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= url_for() %&gt;&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>&lt;%= theme.navbar.blog_title || config.title %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;navbar-toggler-btn&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-toggler&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;collapse&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">            <span class="hljs-attr">data-target</span>=<span class="hljs-string">&quot;#navbarSupportedContent&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">            <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;navbarSupportedContent&quot;</span> <span class="hljs-attr">aria-expanded</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Toggle navigation&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;animated-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- Collapsible content --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;collapse navbar-collapse&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;navbarSupportedContent&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-nav ml-auto text-center&quot;</span>&gt;</span></span><br><span class="language-xml">        &lt;% for(const each of theme.navbar.menu || []) &#123; %&gt;</span><br><span class="language-xml">          &lt;% if (!each.submenu &amp;&amp; !each.link) continue %&gt;</span><br><span class="language-xml">          &lt;% var text = each.name || __(each.key + &#x27;.menu&#x27;) || __(each.key + &#x27;.title&#x27;) %&gt;</span><br><span class="language-xml">          &lt;% if (text.indexOf(&#x27;.menu&#x27;) !== -1 || text.indexOf(&#x27;.title&#x27;) !== -1) &#123;</span><br><span class="language-xml">            text = each.key</span><br><span class="language-xml">          &#125; %&gt;</span><br><span class="language-xml">          &lt;% if (each.submenu) &#123; %&gt;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item dropdown&quot;</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link dropdown-toggle&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;button&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">                 <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;dropdown&quot;</span> <span class="hljs-attr">aria-haspopup</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">aria-expanded</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span></span><br><span class="language-xml">                &lt;%- each.icon ? &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&#x27; + each.icon + &#x27;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>&#x27; : &#x27;&#x27; %&gt;</span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&lt;%- text %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown-menu&quot;</span> <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">&quot;navbarDropdown&quot;</span>&gt;</span></span><br><span class="language-xml">                &lt;% for(const subEach of each.submenu || []) &#123; %&gt;</span><br><span class="language-xml">                  &lt;% if (!subEach.link) continue %&gt;</span><br><span class="language-xml">                  &lt;% var subText = subEach.name || __(subEach.key + &#x27;.title&#x27;) %&gt;</span><br><span class="language-xml">                  &lt;% if (subText.indexOf(&#x27;.title&#x27;) !== -1) &#123;</span><br><span class="language-xml">                    subText = subEach.key</span><br><span class="language-xml">                  &#125; %&gt;</span><br><span class="language-xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown-item&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= url_for(subEach.link) %&gt;&quot;</span>&gt;</span></span><br><span class="language-xml">                    &lt;%- subEach.icon ? &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&#x27; + subEach.icon + &#x27;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>&#x27; : &#x27;&#x27; %&gt;</span><br><span class="language-xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&lt;%- subText %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">                &lt;% &#125; %&gt;</span><br><span class="language-xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">          &lt;% &#125; else &#123; %&gt;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= url_for(each.link) %&gt;&quot;</span>&gt;</span></span><br><span class="language-xml">                &lt;%- each.icon ? &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&#x27; + each.icon + &#x27;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>&#x27; : &#x27;&#x27; %&gt;</span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&lt;%- text %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">          &lt;% &#125; %&gt;</span><br><span class="language-xml">        &lt;% &#125; %&gt;</span><br><span class="language-xml">        &lt;% if(theme.search.enable) &#123; %&gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;search-btn&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;modal&quot;</span> <span class="hljs-attr">data-target</span>=<span class="hljs-string">&quot;#modalSearch&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">          &lt;% import_js(theme.static_prefix.internal_js, &#x27;local-search.js&#x27;) %&gt;</span><br><span class="language-xml">        &lt;% &#125; %&gt;</span><br><span class="language-xml">        &lt;% if(theme.dark_mode &amp;&amp; theme.dark_mode.enable) &#123; %&gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;color-toggle-btn&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Color Toggle&quot;</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-dark&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;color-toggle-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        &lt;% &#125; %&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;translateLink&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:translatePage();&quot;</span>&gt;</span></span><br><span class="language-xml">繁</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/tw_cn.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> defaultEncoding = <span class="hljs-number">2</span>; <span class="hljs-comment">//网站编写字体是否繁体，1-繁体，2-简体</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> translateDelay = <span class="hljs-number">0</span>; <span class="hljs-comment">//延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> cookieDomain = <span class="hljs-string">&quot;https://blissfulalloy79.lazycraft.top&quot;</span>; <span class="hljs-comment">//Cookie地址, 一定要设定, 通常为你的网址</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> msgToTraditionalChinese = <span class="hljs-string">&quot;繁&quot;</span> <span class="hljs-comment">//此处可以更改为你想要显示的文字</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> msgToSimplifiedChinese = <span class="hljs-string">&quot;简&quot;</span> <span class="hljs-comment">//同上，但两处均不建议更改</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">var</span> translateButtonId = <span class="hljs-string">&quot;translateLink&quot;</span>; <span class="hljs-comment">//默认互换id</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">translateInitilization</span>();</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/nav&gt;<br></code></pre></td></tr></table></figure></li></ol><p>至此，导航栏上方就有一个简体繁体切换的按钮了</p><p>俩个问题：</p><div class="note note-warning">            <p>鉴于此脚本是直接整页暴力转换，并不会忽略代码块，所以抄脚本时请注意别把映射内容转换了</p>          </div><div class="note note-warning">            <p>UI 上面有小 bug，点击切换之后指针悬浮颜色渐变效果会消失，需要点击页面其他地方（空白也行）一次才动画效果会再次出现</p>          </div><p>如果有大佬知道如何解决的，欢迎评论建议 (～￣▽￣)～</p>]]></content>
    
    
    
    <tags>
      
      <tag>合集</tag>
      
      <tag>Blog</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MC 服务器连接笔记</title>
    <link href="/04-mcserverconnect/"/>
    <url>/04-mcserverconnect/</url>
    
    <content type="html"><![CDATA[<p>MC 服务器连接笔记</p><span id="more"></span><h1>序</h1><blockquote><p>服务器的连接和架设是俩个不同的课题</p><p>我觉得非常有必要知道其内部是如何运作</p><p>了解一下这串字符，是怎样将你和服务器连接的</p></blockquote><hr><h1>什么是IP？</h1><blockquote><p>一个视频解决你所有问题 ԅ(¯﹃¯ԅ)</p></blockquote><p><a href="https://www.youtube.com/watch?v=tVNx-6OEy-k">https://www.youtube.com/watch?v=tVNx-6OEy-k</a></p><hr><h1>检查你是公网/内网IP</h1><p>有些地区每户都会有个公网 IP，架设好服务器后可以直接通过本地端口映射公网 IP 连接</p><p>没有公网IP的话只能用第三方服务进行端口映射 ( ´･･)ﾉ(._.`)</p><p>有公网IP的也可以使用第三方服务进行端口映射，相对来说更安全，减少个人 IP 直接暴露在外的风险</p><p>如何寻找：</p><ul class="lvl-0"><li class="lvl-2"><p>进入本机连接到的路由器后台页面，查看路由器的 IP <a href="https://www.google.com/search?q=%E6%9F%A5%E7%9C%8B%E8%B7%AF%E7%94%B1%E5%99%A8ip" title="点我传送">如何查看</a></p></li><li class="lvl-2"><p>去浏览器搜索自己的 IP，看看和路由器 IP 是否一致 <a href="https://whatismyipaddress.com/" title="传送">what is my ip?</a></p></li><li class="lvl-2"><p>一致：</p><ul class="lvl-2"><li class="lvl-6">恭喜，你<em><strong>是</strong></em>公网的 ヾ(^▽^*)))</li></ul></li><li class="lvl-2"><p>不一致：</p><ul class="lvl-2"><li class="lvl-6">恭喜，你<em><strong>不是</strong></em>公网的 (#｀-_ゝ-)</li></ul></li></ul><h1>公网IP</h1><h2 id="端口映射：">端口映射：</h2><ul class="lvl-0"><li class="lvl-2"><p>打开路由器控制台页面，找到 <code>端口映射</code> 这个选项</p></li><li class="lvl-2"><p>新增一个端口映射，模式选择 <code>TCP</code></p></li><li class="lvl-2"><p>本地 IP 就选择服务器处于的机子（机子控制台输入 <code>ipconfig</code> 或者直接在路由器后台页面寻找</p></li><li class="lvl-2"><p>本地端口填写 mc 服务器的端口即可（通常可以在服务器设置文件找到）</p></li><li class="lvl-2"><p>外部端口随便填，只要不和已有的映射重复即可</p></li></ul><h2 id="连接：">连接：</h2><ul class="lvl-0"><li class="lvl-2"><p>还记得你的路由器 IP 吗？输入 <code>&#123;路由器IP&#125;:&#123;你刚刚随便填的端口&#125;</code></p></li></ul><p>（应该长这样：<code>xxx.xxx.xxx.xxx:xxxxx</code>）</p><p>搞腚 o(￣▽￣)</p><h1>内网IP</h1><p><s>其实也是要端口映射（（（（</s></p><h2 id="第三方端口映射：（这里用-SakuraFrp）">第三方端口映射：（这里用 <a href="https://www.natfrp.com/" title="SakuraFrp">SakuraFrp</a>）</h2><ul class="lvl-0"><li class="lvl-2"><p>设置 SakuraFrp ：</p><ul class="lvl-2"><li class="lvl-6"><p>注册/登入 SakuraFrp</p></li><li class="lvl-6"><p>导航栏选择 <code>穿透</code> -&gt; <code>软件下载</code></p></li><li class="lvl-6"><p>安装 <code>SakuraFrp 启动器</code></p></li><li class="lvl-6"><p>安装程序进行到 <code>选择组件</code> 这一步时，<code>用户界面</code> 选项记得选择 <code>WPF 界面</code></p></li><li class="lvl-6"><p>等待安装程序完成，启动 <code>SakuraFrp 启动器</code></p></li><li class="lvl-6"><p>使用 <code>访问密钥</code> 登录自己的 SakuraFrp 账户</p></li><li class="lvl-6"><p>访问密钥可以在<a href="https://www.natfrp.com/user/" title="SakuraFrp">官网</a>的导航栏 <code>用户</code> -&gt; <code>用户信息</code> 里找到</p></li></ul></li><li class="lvl-2"><p>建立隧道：</p><ul class="lvl-2"><li class="lvl-6"><p>打开 SakuraFrp 软件</p></li><li class="lvl-6"><p>选择 <code>隧道</code> 界面，点击左上角 <code>+</code> 号新建隧道</p></li><li class="lvl-6"><p>此时你会看到一个 <code>新建穿透隧道</code> 的页面</p></li><li class="lvl-6"><p><code>本地IP</code> 一栏填 <code>127.0.0.1</code> （这个表示本机IP的意思）</p></li><li class="lvl-6"><p><code>端口</code> 一栏填 mc 服务器的端口</p></li><li class="lvl-6"><p><code>隧道类型</code> 选择 <code>TCP</code></p></li><li class="lvl-6"><p><code>穿透节点</code> 随便选择一个<strong>能连接到</strong>而且<strong>延迟又低</strong>的节点即可</p></li><li class="lvl-6"><p>其他选项留空即可</p></li><li class="lvl-6"><p><code>创建</code></p></li></ul></li></ul><h2 id="连接：-2">连接：</h2><ul class="lvl-0"><li class="lvl-2"><p>创建完隧道后，记得启动该隧道</p></li><li class="lvl-2"><p>启动后前往 SakuraFrp 软件的 <code>日志</code> 界面</p></li><li class="lvl-2"><p>应该能在日志里找到一行 <code>使用 [xxxxx.natfrp.cloud:xxxxx] 来连接到你的隧道</code></p></li><li class="lvl-2"><p>把 <code>[ ]</code> 里的东西填进去 mc 连接服务器即可</p></li></ul><p>搞腚 （。＾▽＾）</p><h1>后记：</h1><p>即使拥有公网 IP ，第三方端口映射依然会是我作为连接 mc 服务器的首选项</p><p>你家的公网 IP 自己端口映射拿来做私人用途还行，但是开 mc 服这种的话还是用回第三方的吧</p><p>至少你不会赤裸裸的就把自家 IP 贴外面</p><p>安全性还是好一点（我认为</p><blockquote><p>害人之心不可有，防人之心不可无</p><p>—《菜根谭》</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>笔记</tag>
      
      <tag>Minecraft</tag>
      
      <tag>SakuraFrp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MC 服务器架设笔记</title>
    <link href="/03-lazycraft/"/>
    <url>/03-lazycraft/</url>
    
    <content type="html"><![CDATA[<p>LazyCraft 的架设笔记</p><span id="more"></span><h1>序：</h1><blockquote><p>我也算是个 Minecraft 的老玩家了</p><p>疫情期间，大概是2020年中，我在自己电脑上开了个和朋友们一起玩的服务器（主要是闲的蛋疼）,名为 LazyCraft</p><p>这篇笔记主要是把这些年来在开服过程中学到的东西都记录一下，对其他人有没有帮助不知道</p><p>但我不希望把学到的东西都忘掉</p></blockquote><h2 id="关于-LazyCraft：">关于 LazyCraft：</h2><p>此服务器运行于 Minecraft Java 原版服务端之上，附带一些优化 Mod 但并无添加非原版物品</p><p>服务器共有俩个子服，玩生存的 smp 以及镜像的创造服 cmp</p><p>此服务器的结构主要是在参考 <a href="https://space.bilibili.com/392055878">TIS</a>，是另外一个非常厉害的生电服</p><h2 id="LazyCraft-的架构：">LazyCraft 的架构：</h2><p>这是 LazyCraft 目前的架构，仅供参考：</p><pre><code class="mermaid" >flowchart LRsubgraph ClientA(Minecraft Java)B(Minecraft Bedrock)endA --> CB --> DC & D --> Esubgraph ServerC["Java port"]D["Bedrock port"]E{"Bungeecord + geyser"}F["smp + floodgate"]G["cmp + floodgate"]E <--> F & Gend</code></pre><hr><blockquote><p><em><strong>注：阅读本文需要一定的电脑基础以及英文阅读能力，不懂的地方建议多查文档或者 Wiki</strong></em></p></blockquote><hr><h1>架构以及搭建教程：</h1><h2 id="单个服务端搭建：">单个服务端搭建：</h2><h3 id="原版服务端：">原版服务端：</h3><p>这是一个最基础的服务器，后面的任何升级都是基于此</p><ol><li class="lvl-3"><p>首先，你需要为服务器创建一个文件夹：</p><ul class="lvl-2"><li class="lvl-6">方便后续理解，这里命名为 <code>myserver</code></li><li class="lvl-6">这个文件夹最好放在 HDD 里，因为服务器将会长期读写，不建议 SSD</li><li class="lvl-6">请记住要为这个文件夹预留足够空间</li></ul></li><li class="lvl-3"><p>下载 <code>server.jar</code></p><ul class="lvl-2"><li class="lvl-6"><a href="https://www.minecraft.net/en-us/download/server" title="传送门">从 Minecraft 官网</a></li></ul><p>或者</p><ul class="lvl-2"><li class="lvl-6"><p>从 Minecraft 官方启动器里，点击 <code>Installations</code> 里的 <code>New installation</code></p></li><li class="lvl-6"><p>在 <code>VERSION</code> 一栏的右侧找到 <code>SERVER</code> 字样的按钮</p></li><li class="lvl-6"><p>点击下载</p></li></ul></li><li class="lvl-3"><p>把刚刚下好的 <code>server.jar</code> 放到你的服务器文件夹里</p><ul class="lvl-2"><li class="lvl-6">此时路径应是 <code>.\myserver\server.jar</code></li></ul></li><li class="lvl-3"><p>执行 <code>server.jar</code></p><ul class="lvl-2"><li class="lvl-6">双击，或</li><li class="lvl-6">在服务器文件夹路径执行</li></ul> <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">java -Xmx2G -jar server.jar<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>此时应该没有任何反应，并且你会发现服务器文件夹里生成了一些文件</p><ul class="lvl-2"><li class="lvl-6"><p>生成的文件中应该包括以下内容：</p><ul class="lvl-4"><li class="lvl-10"><code>libraries</code>，Minecraft 服务器的库</li><li class="lvl-10"><code>logs</code>，服务器日志</li><li class="lvl-10"><code>versions</code>，Minecraft 服务器版本</li><li class="lvl-10"><code>eula.txt</code>，Eula 协议</li><li class="lvl-10"><code>server.jar</code>，Minecraft 服务端本体</li><li class="lvl-10"><code>server.properties</code>，服务端选项</li></ul></li></ul></li><li class="lvl-3"><p>用文字编辑器打开 <code>eula.txt</code></p><ul class="lvl-2"><li class="lvl-6">跟随里面的指示把 <code>eula=false</code> 改为 <code>eula=TRUE</code></li><li class="lvl-6">不改的话服务端将无法启动</li></ul></li><li class="lvl-3"><p>再次执行 <code>server.jar</code></p><ul class="lvl-2"><li class="lvl-6">应该会弹出来一个后台界面</li><li class="lvl-6">当后台界面的日志里出现 <code>Done</code> 字样，表示服务器启动成功</li></ul></li></ol><p>此时服务器文件夹目录结构应如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs markdown">|-- myserver\<br><span class="hljs-code">    |-- banned-ips.json</span><br><span class="hljs-code">    |-- banned-players.json</span><br><span class="hljs-code">    |-- eula.txt</span><br><span class="hljs-code">    |-- ops.json</span><br><span class="hljs-code">    |-- server.jar</span><br><span class="hljs-code">    |-- server.properties</span><br><span class="hljs-code">    |-- usercache.json</span><br><span class="hljs-code">    |-- whitelist.json</span><br><span class="hljs-code">    |-- libraries\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |-- logs\</span><br><span class="hljs-code">|   |-- ...</span><br><span class="hljs-code">    |-- versions\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |-- world\</span><br><span class="hljs-code">        |-- ...</span><br></code></pre></td></tr></table></figure><ol start="8"><li class="lvl-3"><p>至此，最基本的服务器已经部署完毕 o(￣▽￣)ｄ</p></li><li class="lvl-3"><p>如何连接服务器：</p><ul class="lvl-2"><li class="lvl-6">考虑这部分篇幅较长，故暂不放在这 （；´д｀）ゞ</li><li class="lvl-6">以后可能会开新博文来写有关这部分的东西（咕~</li><li class="lvl-6">又或者，在此文的最后一段加上（咕咕~</li></ul></li></ol><hr><h3 id="Fabric-服务端：">Fabric 服务端：</h3><p><s>我想给服务器来点优化怎么办？</s></p><p><s>这时候你就需要嵌套个 Fabric 服务端</s> ˋ( ° ▽、° )</p><p>Fabric 服务端可以为你的服务器添加 Mod，想玩一些辅助 Mod 或者想给服务器添加优化的话建议加上</p><p>原版：</p><pre><code class="mermaid" >flowchart LRa("client")b["vanilla server"]a --> b</code></pre><p>有 Fabric 服务端：</p><pre><code class="mermaid" >flowchart LRa("client")subgraph Fabricdirection RLb["vanilla server"]c["mods"]c -- With Fabric --> benda --> Fabric</code></pre><p>由于 Fabric 是嵌套类的，所以你需要准备一个原版服务端</p><ul class="lvl-0"><li class="lvl-2"><p><a href="#%E5%8E%9F%E7%89%88%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%9A" title="请按照顺序阅读哦">如何准备？</a></p></li></ul><ol><li class="lvl-3"><p>安装 <code>fabric-installer</code></p><ul class="lvl-2"><li class="lvl-6">和在客户端安装 Fabric 一样，前往<a href="https://fabricmc.net/use/installer/" title="点我传送">Fabric 官网</a>下载一个 <code>fabric-installer</code></li></ul></li><li class="lvl-3"><p>启动并安装 Fabric 服务端</p><ul class="lvl-2"><li class="lvl-6">启动刚刚下载好的 <code>fabric-installer</code></li><li class="lvl-6">和安装客户端不同，请先到 Installer 的左上角选择 <code>服务端</code></li><li class="lvl-6">选择需要的游戏版本以及加载器版本（此处请留意 mod 的兼容性）</li><li class="lvl-6">安装位置请选择服务器文件夹，这里还是用 <code>myserver\</code> 做演示</li><li class="lvl-6">请确保安装的位置和 <code>server.jar</code> 是处于同一个</li></ul></li><li class="lvl-3"><p>Fabric 服务端安装完成</p><ul class="lvl-2"><li class="lvl-6">Fabric Installer 应该会弹出来一个成功界面</li><li class="lvl-6">可以在这里选择 <code>生成启动脚本</code></li></ul></li></ol><p>此时服务器文件夹目录结构应如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs markdown">|-- myserver\<br><span class="hljs-code">    |-- banned-ips.json</span><br><span class="hljs-code">    |-- banned-players.json</span><br><span class="hljs-code">    |-- directoryList.md</span><br><span class="hljs-code">    |-- eula.txt</span><br><span class="hljs-code">    |-- fabric-server-launch.jar</span><br><span class="hljs-code">    |-- fabric-server-launcher.properties</span><br><span class="hljs-code">    |-- ops.json</span><br><span class="hljs-code">    |-- server.jar</span><br><span class="hljs-code">    |-- server.properties</span><br><span class="hljs-code">    |-- start.bat</span><br><span class="hljs-code">    |-- start.sh</span><br><span class="hljs-code">    |-- usercache.json</span><br><span class="hljs-code">    |-- whitelist.json</span><br><span class="hljs-code">    |-- .fabric\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |-- libraries\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |-- logs\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |   |-- latest.log</span><br><span class="hljs-code">    |-- mods\</span><br><span class="hljs-code">    |-- versions\</span><br><span class="hljs-code">    |   |-- ...</span><br><span class="hljs-code">    |-- world</span><br><span class="hljs-code">        |-- ...</span><br></code></pre></td></tr></table></figure><p>多了些文件有没有发现</p><ol start="5"><li class="lvl-3"><p>启动服务器</p><ul class="lvl-2"><li class="lvl-6">不能直接运行 <code>server.jar</code> ，不然不会启用 Fabric</li><li class="lvl-6">同路径执行另外一个 <code>.jar</code> 文件，应该是叫做 <code>fabric-server-launch.jar</code>，或</li><li class="lvl-6">执行</li></ul> <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">java -Xmx2G -jar fabric-server-launch.jar nogui<br></code></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><p>日志显示 <code>Done</code> 字样，即为成功</p></li></ul></li><li class="lvl-3"><p>至此，Fabric 服务端部署完毕 ╰(￣ω￣ｏ)</p></li></ol><hr><h3 id="服务端控制工具：">服务端控制工具：</h3><blockquote><p>注* 此处非必须</p></blockquote><p>单单是一个服务端我觉得不够，还需要一些插件来丰富游戏体验</p><p>在不影响原版服务端做为前提，这里我推荐 MCDR （五毛一条，记得删括号）</p><p><a href="https://github.com/Fallen-Breath/MCDReforged">https://github.com/Fallen-Breath/MCDReforged</a></p><p>如何部署等问题都能在他们的文档里解决，这里就不过多叙述</p><blockquote><p>为啥我会选择 MCDR ：</p><ul class="lvl-1"><li class="lvl-2"><p>除了提升游戏内的体验，游戏外的管理也是非常的不错</p></li><li class="lvl-2"><p>能很方便的解决你想要的刁钻小功能</p></li></ul></blockquote><p>一些插件能提升游玩体验，例如广播坐标、坐标记录器、聊天计算器、每日一句等等</p><p>这些功能都是可以通过其他方式做到的，加个 mod 就行了</p><p>但是有另外一些功能，用 mod 实现还是没那么好，例如存档备份以及回档，同步生存服区块至镜像服等</p><p>这些种种功能都是靠插件实现的，这些插件的开发难度非常低，上限却非常高</p><p>也就是说当你想到一个刁钻的想法，几乎没人去做，在经过简单的编程下就能实现了</p><p>你也可以经过长时间的研磨，把这个插件的功能做到非常强大</p><p>这些都是我个人认为的好处，实际上论实用程度还是因人而异</p><p>不管怎样，用了这么久的 MCDR，还是觉得有必要推荐一下的 (｡･∀･)ﾉﾞ</p><hr><h2 id="多个服务端搭建：">多个服务端搭建：</h2><blockquote><p>一个服务器我看还不够，那就开多几个吧 §(*￣▽￣*)§</p></blockquote><p>LazyCraft 原本是只有一个 smp (生存服)，我<s>在深思熟虑之后</s>决定开多一个镜像创造服（cmp）</p><p>其实开多一个服很简单，主要还是重复上面的步骤，只不过就要在 <code>server.properties</code> 里面把端口号改改就行了</p><ol><li class="lvl-3"><p>先重复上面的步骤开多一个服</p></li><li class="lvl-3"><p>打开 <code>server.properties</code> 并找到 <code>server-port=</code></p></li><li class="lvl-3"><p>把后面的端口号改成和第一个服务器不一样即可</p></li></ol><blockquote><p><em><strong>请确保新的端口号未被占用</strong></em></p></blockquote><ol start="4"><li class="lvl-3"><p>启动服务器，搞腚（</p></li></ol><hr><h3 id="多服务端互联（BungeeCord）：">多服务端互联（BungeeCord）：</h3><blockquote><p>换个服务器就要退出再进入，麻不麻烦，直接在游戏里打个指令不久好了吗 ￣へ￣</p></blockquote><p>有个叫做 <a href="https://www.spigotmc.org/wiki/bungeecord/" title="传送门">BungeeCord</a> 的玩意，它可以直接在游戏内连接不同的服务器，不再需要退回服务器列表</p><p>这个东西原本应该是给 Spigot 服务端用的，不过他也支持原版服务端，对于多子服的服务器就很方便</p><p>如何架设：</p><ol><li class="lvl-3"><p>在你的服务器文件同级为 BungeeCord 新建一个文件夹：</p><ul class="lvl-2"><li class="lvl-6"><p>为后续理解，这里命名为 <code>bungeecord</code></p></li><li class="lvl-6"><p>此时目录结构应该如下：</p></li></ul> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">|-- serverdir\<br><span class="hljs-code">|-- bungeecord\</span><br><span class="hljs-code">|-- myserver\</span><br><span class="hljs-code">|-- ...</span><br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>前往 <a href="https://ci.md-5.net/job/BungeeCord/" title="传送门">BungeeCord 的 Jenkins</a> 并下载最新的 Artifact：</p><ul class="lvl-2"><li class="lvl-6"><p>在 <code>Last Successful Artifacts</code> 那部分点击 <code>BungeeCord.jar</code> 即可下载</p></li><li class="lvl-6"><p>只用下载 <code>.jar</code> 文件足矣</p></li></ul></li><li class="lvl-3"><p>下载完后，把 <code>BungeeCord.jar</code> 放到刚刚新建的文件夹里：</p><ul class="lvl-2"><li class="lvl-6">这里作为演示把 <code>BungeeCord.jar</code> 放到 <code>bungeecord</code> 里面</li></ul></li><li class="lvl-3"><p>双击执行 <code>BungeeCord.jar</code> ：</p><ul class="lvl-2"><li class="lvl-6"><p>此时它会在文件夹里生成一堆文件</p></li><li class="lvl-6"><p>此时你的 BungeeCord 目录应该如下：</p></li></ul> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs markdown">|-- serverdir\<br><span class="hljs-code">|-- bungeecord\</span><br><span class="hljs-code">|   |-- BungeeCord.jar</span><br><span class="hljs-code">|   |-- config.yml</span><br><span class="hljs-code">|   |-- locations.yml</span><br><span class="hljs-code">|   |-- modules.yml</span><br><span class="hljs-code">|   |-- proxy.log.0</span><br><span class="hljs-code">|   |-- proxy.log.0.lck</span><br><span class="hljs-code">|   |-- modules\</span><br><span class="hljs-code">|   |   |-- ...</span><br><span class="hljs-code">|   |-- plugins\</span><br><span class="hljs-code">|-- myserver\</span><br><span class="hljs-code">|-- ...</span><br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>看到这么多文件，先别慌，现在唯一需要做的就是配置 <code>config.yml</code> ，其余文件基本上都不会用到</p></li><li class="lvl-3"><p>配置 <code>config.yml</code> ：</p><blockquote><p>详细配置请参考 <a href="https://www.spigotmc.org/wiki/bungeecord-configuration-guide/" title="传送">BungeeCord Wiki</a> ，内容实在是太多太多了，这里就只讲些我觉得重要的项目</p></blockquote><ul class="lvl-2"><li class="lvl-6"><p><code>online_mode</code> 可按照自己需求开或者关</p></li><li class="lvl-6"><p><code>servers</code> 请填写你的子服名字以及配置，有多少个服就写多少个：</p><ul class="lvl-4"><li class="lvl-10">举个例子，我有俩个服，位于端口<code>25565</code>的 smp ，以及位于<code>25585</code>的 cmp ：</li></ul>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">smp:</span><span class="hljs-comment"># 服务器名称，***十分非常建议***使用 lowercase</span><br><span class="hljs-attr">motd:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">smp</span> <span class="hljs-string">server</span><span class="hljs-comment"># 服务器的 motd</span><br><span class="hljs-attr">address:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:25565</span><span class="hljs-comment"># 子服的 IP 以及端口号</span><br><span class="hljs-attr">restricted:</span> <span class="hljs-literal">false</span><span class="hljs-comment"># 是否为限制（开限制的服务器只有有权限许可才能进入）</span><br>  <span class="hljs-attr">cmp:</span><span class="hljs-comment"># 请***记得使用*** lowercase</span><br><span class="hljs-attr">motd:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">cmp</span> <span class="hljs-string">server</span><span class="hljs-comment"># 同上</span><br><span class="hljs-attr">address:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:25585</span><span class="hljs-comment"># 同上</span><br><span class="hljs-attr">restricted:</span> <span class="hljs-literal">false</span><span class="hljs-comment"># 同上</span><br></code></pre></td></tr></table></figure></li><li class="lvl-6"><p><code>listeners</code> ，监听端口：</p><ul class="lvl-4"><li class="lvl-10"><p><code>query_port</code> ，你将通过这个端口访问服务器</p><blockquote><p>如果 <code>query_port</code> 填 <code>25577</code> ，那连接服务器时就要填写 <code>&#123;服务器 IP&#125;:&#123;25577&#125;</code></p></blockquote></li><li class="lvl-10"><p><code>priorities</code> ，填写优先子服（刚刚的服务器名称），如果启用 <code>force_default_server</code> 的话每次进入就会默认是这个子服</p></li><li class="lvl-10"><p><code>force_default_server</code> ，是否启用默认服务器，启用的话每次加入都会是指定服务器， 不启用则每次加入都是上次退出的服务器</p></li><li class="lvl-10"><p><code>bind_local_address</code> ，默认开启，除非你的系统有多 IP 地址，通常不会动这个</p></li><li class="lvl-10"><p><code>host</code> ，默认 <code>0.0.0.0:25577</code> ，表示 BungeeCord 会在哪个 IP 和端口上运行，这个也通常不用动</p></li></ul></li></ul></li><li class="lvl-3"><p>配置子服 <code>server.properties</code> ：</p><blockquote><p>使用 BungeeCord 的话原版子服必须要关掉 <code>online-mode</code>，不然无法使用</p><p>（BungeeCord 本身就只是给 Spigot 用的，想使用原版端只能做些妥协 ㄟ( ▔, ▔ )ㄏ）</p></blockquote><ul class="lvl-2"><li class="lvl-6"><p>将 <strong>所有子服</strong> 的 <code>online-mode</code> 设置为 <code>false</code> ：</p><ul class="lvl-4"><li class="lvl-10"><p>这不代表关闭了正版验证，只是一旦使用了 BungeeCord 就只能关掉，不然无法加入游戏</p></li><li class="lvl-10"><p>无需担心关掉正版验证后的皮肤加载问题，只要是通过 BungeeCord 连接的都能正确显示皮肤</p></li></ul></li></ul></li></ol><p>搞腚 ヾ(￣▽￣)</p><ol start="8"><li class="lvl-3"><p>连接</p><blockquote><p>启用 BungeeCord 后就不要直接使用原本服务端的端口来连接了，否则会造成一系列问题例如皮肤加载等</p></blockquote><ul class="lvl-2"><li class="lvl-6"><p>如需连接就要使用 BungeeCord 的端口，默认就是 <code>25577</code></p></li><li class="lvl-6"><p>连接 IP ：<code>&#123;本机 IP&#125;:&#123;25577&#125;</code></p></li></ul></li></ol><p><s>（之后可能如果有空的话应该大概会出一个有关 BungeeCord 的详细教程以及一路来踩的坑</s></p><p>（先鸽了，拜拜</p><hr><h3 id="跨版本连接：">跨版本连接：</h3><h4 id="不同-Java-版本：">不同 Java 版本：</h4><blockquote><p>玩多了都知道，装了亿堆优化 Mod 以及各种原因的服务器更新是个非常蛋疼的事</p><p>服务器版本更新不一定跟得上客户端更新，何况 Mojang 还经常来些小更新（<code>.1 .2 .3</code>）</p><p>运维要死人力 (ノ｀Д)ノ</p></blockquote><p>不过，社区玩家们开发了一个 BungeeCord 插件，叫做 <a href="https://github.com/ViaVersion/ViaVersion" title="github">ViaVersion</a></p><p>这个插件能让高版本玩家透过 BungeeCord 加入低版本服务器</p><p>设置插件：</p><ol><li class="lvl-3"><p>前往 <a href="https://github.com/ViaVersion/ViaVersion" title="github">ViaVersion GitHub</a> 下载最新 Release</p></li><li class="lvl-3"><p>将 <code>.jar</code> 文件放进 <code>bungeecord\</code> 文件里的 <code>plugins\</code></p></li><li class="lvl-3"><p>启动 BungeeCord</p></li><li class="lvl-3"><p>此时刚刚的 <code>plugins\</code> 文件夹里应该多了一个也叫做 <code>ViaVersion</code> 的文件夹，里面装的是 <code>config.yml</code> ：</p><ul class="lvl-2"><li class="lvl-6"><p>这个是 ViaVersion 的 config 文件，默认不用动就已经设置完成了</p></li><li class="lvl-6"><p>不过你可以按照情况修改 config，ViaVersion 有官方文档供查阅</p></li></ul></li></ol><p>到这部就已经设置完成力 (｡･∀･)ﾉﾞ</p><hr><h4 id="Bedrock-Edition-（基岩版）连接-Java-服务器：">Bedrock Edition （基岩版）连接 Java 服务器：</h4><blockquote><p><s>有玩家只有 BE （基岩版）怎么办，有办法让 BE 进 Java 的服务器吗 ＞︿＜</s></p><p>MC 官方都买一送一了，直接用 Java 版连不就行了吗 &lt;( ￣^￣)(θ(θ☆( &gt;_&lt;</p></blockquote><p><a href="https://wiki.geysermc.org/geyser/" title="传送">Geyser 官方文档</a></p><blockquote><p>由于 Geyser 的使用情况非常situational，本文只用 LazyCraft 的案例教学，还是老话，建议多查官方文档</p><p><s>（等哪天我突然想来个完整教程再说，不过大概率不会</s></p></blockquote><p>LazyCraft 正在使用 BungeeCord ，所以 Geyser 将会是以 <code>BungeeCord 插件</code> 的形式设置</p><p>除了 <code>BungeeCord 插件</code> ，Geyser 也提供 Standalong 设置，也就是不依赖 BungeeCord</p><p>设置 BungeeCord 插件：</p><ol><li class="lvl-3"><p>前往 <a href="https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/" title="传送">Geyser 的 build server</a> 下载最新的 <code>Geyser-BungeeCord.jar</code> 的文件</p></li><li class="lvl-3"><p>将 <code>Geyser-BungeeCord.jar</code> 文件放进 <code>plugins\</code></p></li><li class="lvl-3"><p>启动 BungeeCord</p></li><li class="lvl-3"><p>此时应该会在 <code>plugins\</code> 生成一些配置文件：</p><ul class="lvl-2"><li class="lvl-6"><p><code>plugins\Geyser-BungeeCord\</code> 这是 Geyser 的配置文件路径</p></li><li class="lvl-6"><p>你会动的只有 <code>config.yml</code> ，其他一律不用管</p></li></ul></li><li class="lvl-3"><p>理论上无需再手动配置 <code>config.yml</code> ，直接就能用了，有兴趣的话可以自行查看文档</p></li><li class="lvl-3"><p>连接：</p><ul class="lvl-2"><li class="lvl-6"><p>BE 连接默认端口是 <code>19132</code> ， 除非你修改过 <code>config.yml</code> 的端口，否则直接填写 <code>本机 IP</code> 以及 <code>19132</code> 即可</p></li><li class="lvl-6"><p><em><strong>注意，BE 是不允许本机连接本机的，所以测试时请使用其他机子（手机等）连接</strong></em></p></li></ul></li></ol><p>另外，</p><blockquote><p>如果你的服务器已开启 <code>online-mode</code> ，或</p><p>你想让 BE 玩家正确的显示皮肤</p></blockquote><p><em>那么请在安装 Geyser 插件之外也装一下 <a href="https://wiki.geysermc.org/floodgate/" title="传送">Floodgate</a></em></p><blockquote><p>还是利用 LazyCraft 的案例教学，本服 Floodgate 是搭配 BungeeCord 使用</p></blockquote><p>设置 Floodgate：</p><ol><li class="lvl-3"><p><a href="https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/" title="下载">下载 BungeeCord 插件版的 Floodgate</a>：</p><ul class="lvl-2"><li class="lvl-6">选择 <code>floodgate-bungee.jar</code></li></ul></li><li class="lvl-3"><p>将 <code>floodgate-bungee.jar</code> 文件放进 <code>plugins\</code></p></li><li class="lvl-3"><p>启动 BungeeCord ，启动完成后可以关掉了</p></li><li class="lvl-3"><p>此时 <code>plugins\</code> 文件夹应该会生成一些 floodgate 的配置文件：</p><ul class="lvl-2"><li class="lvl-6"><p><code>plugins\floodgate\</code> 这是 floodgate 的配置文件路径</p></li><li class="lvl-6"><p>理论上你是<em><strong>不需要</strong></em>去动 floodgate 的 <code>config.yml</code> ，有兴趣的可以自行查看文档</p></li></ul></li><li class="lvl-3"><p>配置 Geyser 的 <code>config.yml</code> ：</p><ul class="lvl-2"><li class="lvl-6"><p>打开 Geyser 的 <code>config.yml</code> ，路径是 <code>plugins\Geyser-BungeeCord\config.yml</code></p></li><li class="lvl-6"><p>将 <code>remote</code> 里的 <code>auth-type</code> 更改为 <code>floodgate</code></p></li></ul> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">remote:</span><br><span class="hljs-attr">auth-type:</span> <span class="hljs-string">floodgate</span><br></code></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><p>保存</p></li></ul></li><li class="lvl-3"><p>搞腚，再次启动 BungeeCord 就可以了 ˋ( ° ▽、° )</p></li></ol><hr><h2 id="连接：">连接：</h2><p>新开了博文来专门写这部分</p><p>(￣﹃￣)</p><a class="btn" href="https://blissfulalloy79.github.io/04-mcserverconnect/"  title="点我前往" target="_blank">点我前往</a><hr><h1>后记：</h1><p>呼，终于写完这一篇啦 （；´д｀）ゞ</p><p>从七月初挖坑结果咕了一整个暑假到现在九月中终于是把坑填上了（大力吸气</p><p>说句实在话，这篇下来一直都忽略了不少东西</p><p>当初希望这份笔记不要写的太复杂，结果中途就一直注重着「简洁」，内容只做到了「跟着做就能运行」的程度</p><p>其中缺乏了很多解释，某些部分感觉描述起来特别麻烦的就只留下了个「可以自行查看文档」</p><p>文中用词欠缺统一，读起来可能会有点乱 &lt;(＿　＿)&gt;</p><p>作为我第一份长篇（？笔记，日后我也会去想办法完善的 (‾◡◝)</p><p>cya~</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>笔记</tag>
      
      <tag>Minecraft</tag>
      
      <tag>BungeeCord</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实用软件收录</title>
    <link href="/02-software/"/>
    <url>/02-software/</url>
    
    <content type="html"><![CDATA[<p>个人的一些常用以及实用软件收录</p><span id="more"></span><h3 id="序：">序：</h3><p>是时候做个常用软件的收录了，以免下次怎么了的时候漏掉一些非常好用的软件 q(≧▽≦q)</p><p>由于收录软件列表过短，故暂不做分类</p><hr><h4 id="软件列表：">软件列表：</h4><ul class="lvl-0"><li class="lvl-2"><p>Windows:</p><ul class="lvl-2"><li class="lvl-6">下载：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox2"><label for="checkbox2">Internet Download Manager</label></li></ul></li><li class="lvl-6">文件浏览/编辑：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox3"><label for="checkbox3">7-Zip File Manager</label></li><li class="lvl-10"><input type="checkbox" id="checkbox4"><label for="checkbox4">Notepad++</label></li><li class="lvl-10"><input type="checkbox" id="checkbox5"><label for="checkbox5">PotPlayer</label></li></ul></li><li class="lvl-6">代码相关：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox6"><label for="checkbox6">PyCharm</label></li><li class="lvl-10"><input type="checkbox" id="checkbox7"><label for="checkbox7">IntelliJ IDEA</label></li><li class="lvl-10"><input type="checkbox" id="checkbox8"><label for="checkbox8">VS Code</label></li><li class="lvl-10"><input type="checkbox" id="checkbox9"><label for="checkbox9">Git</label></li><li class="lvl-10"><input type="checkbox" id="checkbox10"><label for="checkbox10">GitHub Desktop</label></li></ul></li><li class="lvl-6">实用工具：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox11"><label for="checkbox11">PowerToys</label></li><li class="lvl-10"><input type="checkbox" id="checkbox12"><label for="checkbox12">DevToys</label></li><li class="lvl-10"><input type="checkbox" id="checkbox13"><label for="checkbox13">EarTrumpet</label></li><li class="lvl-10"><input type="checkbox" id="checkbox14"><label for="checkbox14">Mod Manager</label></li></ul></li><li class="lvl-6">笔记/记录：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox15"><label for="checkbox15">Notion</label></li><li class="lvl-10"><input type="checkbox" id="checkbox16"><label for="checkbox16">Microsoft To Do</label></li></ul></li><li class="lvl-6">美化：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox17"><label for="checkbox17">Wallpaper Engine</label></li><li class="lvl-10"><input type="checkbox" id="checkbox18"><label for="checkbox18">TranslucentTB</label></li></ul></li><li class="lvl-6">安全：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox19"><label for="checkbox19">火绒</label></li></ul></li><li class="lvl-6">远程：<ul class="lvl-4"><li class="lvl-10"><input type="checkbox" id="checkbox20"><label for="checkbox20">Remote Desktop</label></li></ul></li></ul></li></ul><p>咕咕咕~</p>]]></content>
    
    
    <categories>
      
      <category>收录合集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>合集</tag>
      
      <tag>软件</tag>
      
      <tag>收录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown笔记</title>
    <link href="/01-markdown/"/>
    <url>/01-markdown/</url>
    
    <content type="html"><![CDATA[<p>一些 Markdown 语法的笔记</p><span id="more"></span><h3 id="注：">注：</h3><p>Hexo 默认的 Markdown 渲染器是 <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>, 但其渲染格式有限</p><p>此博客使用的是 <a href="https://github.com/hexojs/hexo-renderer-markdown-it">hexo-renderer-markdown-it</a>, 并且搭配一些插件使用</p><p>关于如何安装以及使用，请参见CSDN的<u><a href="https://blog.csdn.net/qq_42951560/article/details/123596899">这个帖子</a></u></p><hr><h3 id="标题：">标题：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 等级一</span><br><span class="hljs-section">## 等级二</span><br><span class="hljs-section">### 等级三</span><br><span class="hljs-section">#### 等级四</span><br><span class="hljs-section">##### 等级五</span><br><span class="hljs-section">######  等级六</span><br></code></pre></td></tr></table></figure><hr><h3 id="常用格式：">常用格式：</h3><p><em>Italic</em><br><strong>Bold</strong><br><em><strong>Italic Bold</strong></em><br><s>Strikethrough</s><br><u>Underscore</u><br><mark>highlight</mark><br>H<sub>2</sub>O<br>X<sup>2</sup></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-emphasis">*Italic*</span><br><span class="hljs-strong">**Bold**</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*Italic Bold*</span>**</span><br>~~Strikethrough~~<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span></span>Underscore<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span></span><br>==highlight==<br>H~2~O<br>X^2^<br></code></pre></td></tr></table></figure><hr><h3 id="引用：">引用：</h3><blockquote><p>这是引用</p><blockquote><p>引用里可以加引用</p><blockquote><p>再加都没问题</p></blockquote></blockquote></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&gt;这是引用<br>&gt;&gt;引用里可以加引用<br>&gt;&gt;&gt;再加都没问题<br></code></pre></td></tr></table></figure><hr><h3 id="列表：">列表：</h3><p>这是一个有序列表：</p><ol><li class="lvl-3"><p>第一项</p></li><li class="lvl-3"><p>第二项</p></li><li class="lvl-3"><p>第三项</p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一个有序列表：<br><span class="hljs-bullet">1.</span> 第一项<br><span class="hljs-bullet">2.</span> 第二项<br><span class="hljs-bullet">3.</span> 第三项<br></code></pre></td></tr></table></figure><p>这是一个无序列表：</p><ul class="lvl-0"><li class="lvl-2"><p>其一</p></li><li class="lvl-2"><p>其二</p></li><li class="lvl-2"><p>其三</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一个无序列表：<br><span class="hljs-bullet">-</span> 其一<br><span class="hljs-bullet">-</span> 其二<br><span class="hljs-bullet">-</span> 其三<br></code></pre></td></tr></table></figure><p>这是一个检查表：</p><ul class="lvl-0"><li class="lvl-2"><p><input type="checkbox" id="checkbox0"><label for="checkbox0"> done</label></p></li><li class="lvl-2"><p><input type="checkbox" id="checkbox1" checked="true"><label for="checkbox1"> done</label></p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一个检查表：<br><span class="hljs-bullet">-</span> [ ] 未完成<br><span class="hljs-bullet">-</span> [x] 已完成 <br></code></pre></td></tr></table></figure><dl><dt>这是一个定义列表：</dt><dd>第一行</dd><dd>第二行</dd></dl><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一个定义列表：<br>: 第一行<br>: 第二行<br></code></pre></td></tr></table></figure><hr><h3 id="表格：">表格：</h3><table><thead><tr><th style="text-align:left">1A</th><th style="text-align:right">2B</th><th style="text-align:center">3C</th></tr></thead><tbody><tr><td style="text-align:left">1ABC</td><td style="text-align:right">2ABC</td><td style="text-align:center">3ABC</td></tr><tr><td style="text-align:left">1A</td><td style="text-align:right">2B</td><td style="text-align:center">3C</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">|1A|2B|3C|<br>|:---|---:|:---:|(向左对齐，向右对齐，中间对齐)<br>|1ABC|2ABC|3ABC|<br>|1A|2B|3C|<br></code></pre></td></tr></table></figure><hr><h3 id="链接：">链接：</h3><p><a href="https://google.com" title="前往google.com">这是一个去Google的链接</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<span class="hljs-string">这是一个去Google的链接</span>](<span class="hljs-link">https://google.com &quot;前往google.com&quot;</span>)<br>//引号内容于鼠标悬浮于链接时显示<br></code></pre></td></tr></table></figure><p><a href="https://google.com" title="前往google.com">这是另一种方式达到类似效果，但全局可用</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<span class="hljs-string">这是另一种方式达到类似效果，但全局可用</span>][<span class="hljs-symbol">id</span>]<br><br>[<span class="hljs-symbol">id</span>]: <span class="hljs-link">https://google.com &quot;前往google.com&quot;</span><br>//全文任意链接都可以套用<br>//这样遇到一个要重复很多次的链接就可以打少点东西力<br></code></pre></td></tr></table></figure><p>回到<a href="#%E6%A0%87%E9%A2%98%EF%BC%9A">标题：</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">回到[<span class="hljs-string">标题：</span>](<span class="hljs-link">#标题：</span>)<br>//括号内容是 # + 本文中你想跳转到的标题<br></code></pre></td></tr></table></figure><h3 id="图片：">图片：</h3><p><img src="https://avatars.akamai.steamstatic.com/e448b1d860b6aa798fa0efa38190914488e2dfbe_full.jpg" alt="这是一张图片" title="俺滴steam头像"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">这是一张图片</span>](<span class="hljs-link">https://avatars.akamai.steamstatic.com/e448b1d860b6aa798fa0efa38190914488e2dfbe_full.jpg &quot;俺滴steam头像&quot;</span>)<br>//括号内容是图片地址以及图片注释<br></code></pre></td></tr></table></figure><hr><h3 id="脚注：">脚注：</h3><p>什么是脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="这个是脚注">[1]</span></a></sup>?</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">什么是脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="这个是脚注">[1]</span></a></sup>?<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">这个是脚注</span><br><br></code></pre></td></tr></table></figure><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>这个是脚注<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
